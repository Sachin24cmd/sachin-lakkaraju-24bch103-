{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sachin24cmd/sachin-lakkaraju-24bch103-/blob/main/lab%201%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#1.) Add two numbers.\n",
        "a = 11\n",
        "b = 4\n",
        "c = a + b\n",
        "d = b - a\n",
        "e = b/a\n",
        "print(c)\n",
        "print(d)\n",
        "print(e)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-3NDUw3aDXtS",
        "outputId": "32a3820e-2c78-46ea-c39a-ee1c341bb1c5"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "15\n",
            "-7\n",
            "0.36363636363636365\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#2.)Convert hours into minutes.\n",
        "hour = 5\n",
        "minute = 60 * hour\n",
        "print(minute)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6RgobL1HDqjY",
        "outputId": "d85083b7-028d-47dc-8762-93c1bb8824f5"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "300\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3) subtract two numbers.\n",
        "# Subtract two numbers\n",
        "num1 = 12\n",
        "num2 = 5\n",
        "result = num1 - num2\n",
        "print(result)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vy7b3iULD9yS",
        "outputId": "a59083cd-33f7-4053-c8d7-63756d3638e7"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4) Multiply two numbers\n",
        "num1 = 10\n",
        "num2 = 5\n",
        "result = num1 * num2\n",
        "\n",
        "print(result)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EaN2ufwVFNox",
        "outputId": "47c715ae-89de-4a61-eb7c-a40dd92946c7"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "50\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 5) Divide two numbers\n",
        "num1 = 10\n",
        "num2 = 5\n",
        "result = num1 / num2\n",
        "\n",
        "print(result)\n"
      ],
      "metadata": {
        "id": "3a0H8LE0FYPM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 6) Add, multiply, subtract and divide two numbers.\n",
        "a = 10\n",
        "b = 5\n",
        "\n",
        "addition = a + b\n",
        "print(f\"Add: {a} + {b} = {addition}\")\n",
        "\n",
        "subtraction = a - b\n",
        "print(f\"Subtract: {a} - {b} = {subtraction}\")\n",
        "\n",
        "multiplication = a * b\n",
        "print(f\"Multiply: {a} * {b} = {multiplication}\")\n",
        "\n",
        "if b != 0:\n",
        "    division = a / b\n",
        "    print(f\"Divide: {a} / {b} = {division}\")\n",
        "else:\n",
        "    print(\"Error! Division by zero.\")\n"
      ],
      "metadata": {
        "id": "KvyMSPx2FgPu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 7) convert minute into hours\n",
        "minutes = 180  # Example value for minutes\n",
        "\n",
        "\n",
        "hours = minutes / 60\n",
        "\n",
        "# Display the result\n",
        "print(f\"Convert {minutes} minutes into hours: {hours} hours\")\n"
      ],
      "metadata": {
        "id": "B0597LRAHuwN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 8.)Convert dollars into Rs. Where 1 $ = 48 Rs.\n",
        "rs = 2000\n",
        "doller = rs/82\n",
        "print(doller)\n"
      ],
      "metadata": {
        "id": "LtDg0ddUH16l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 9.)Convert Rs. into dollars where 1 $ = 48 Rs.\n",
        "rs = 980\n",
        "doller = rs/82\n",
        "print(doller)"
      ],
      "metadata": {
        "id": "PUpditsWH13i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 10.) Convert dollars into pound where 1 $ = 48 Rs. And 1 pound = 70 Rs.\n",
        "doller = 60\n",
        "rs = doller * 82\n",
        "pound = rs /70\n",
        "print('doller to pound is ',pound)"
      ],
      "metadata": {
        "id": "GYuDr_ibH11C"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#11.) Convert grams into kg.\n",
        "gram = 1000\n",
        "kg = gram /1000\n",
        "print('gm to kg is ',kg)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rfXuMkNMH1x3",
        "outputId": "8ceec4ed-3894-4270-f4ed-339398fbc185"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "gm to kg is  1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#12.) Convert kgs into grams.\n",
        "kg = 5\n",
        "gram = kg * 1000\n",
        "print('kg to gram',gram)\n"
      ],
      "metadata": {
        "id": "Rd_8rOrJH1uF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 13.) Convert bytes into KB, MB and GB.\n",
        "byte = 5000\n",
        "kb = byte / 1024\n",
        "mb = kb /1042\n",
        "gb = mb / 1024\n",
        "print('byte to kb is',kb,'byte to mb is ',mb,'byte to gb is ',gb)\n"
      ],
      "metadata": {
        "id": "vPajPvG-H1o1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 14.) Convert celcius into Fahrenheit. F = (9/5 * C) + 32\n",
        "celcius = 37\n",
        "fehrenheit = (9/5*celcius)+32\n",
        "print(fehrenheit)"
      ],
      "metadata": {
        "id": "eQAirJq3H1gc"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 15.) Convert Fahrenheit into celcius. C = 5/9 * (F – 32)\n",
        "fehrenheit = 98.6\n",
        "celcius = (5/9)*(fehrenheit-32)\n",
        "print(celcius)"
      ],
      "metadata": {
        "id": "vJyJyZzVH1K8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 16.) Calculate interest where I = PRN/100.\n",
        "p = 1000\n",
        "t = 10\n",
        "r = 7\n",
        "intrest = (p*t*r)/100\n",
        "print(intrest)\n"
      ],
      "metadata": {
        "id": "eKSrxTG0JAaK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 17.) Calculate area & perimeter of a square. A = L^2, P = 4L\n",
        "length = 50\n",
        "area = length ** 2\n",
        "perimeter = 4 * length\n",
        "print(area)\n",
        "print(perimeter)"
      ],
      "metadata": {
        "id": "8gk47fe6JG3z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 18.) Calculate area & perimeter of a rectangle. A = L*B, P = 2 (L+B)\n",
        "length = 50\n",
        "width = 7\n",
        "area = length * width\n",
        "perimeter = 2*(length + width)\n",
        "print(area)\n",
        "print(perimeter)"
      ],
      "metadata": {
        "id": "Iv0sDSYxJGi2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 19.) Calculate area of a circle. A = 22/7 * R * R\n",
        "radius = 35\n",
        "area = (22/7)*radius*radius\n",
        "print(area)"
      ],
      "metadata": {
        "id": "oQL9EdgPJUdb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 20.) Calculate area of a triangle. A = H*L/2\n",
        "4/23/25, 7:03 PM Python programming - Colab\n",
        "https://colab.research.google.com/drive/1hqu3cwA7ivZLlEK1h5RtGENpjHfHp9T8#printMode=true 2/21\n",
        "h = 10\n",
        "l = 5\n",
        "a = (h*l)/2\n",
        "print(a)\n"
      ],
      "metadata": {
        "id": "Dom3c1ufJULq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# 21 )Calculate net salary where net salary = gross salary + allowance – deduction.\n",
        "# Allowances are 10% while deductions are 3% of gross salary.\n",
        "gross_salary = 50000  # Define gross_salary and assign a value\n",
        "\n",
        "allowance = gross_salary * 0.10\n",
        "deduction = gross_salary * 0.03\n",
        "net_salary = gross_salary + allowance - deduction\n",
        "\n",
        "print(\"Net Salary:\", net_salary)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "acGL7oOwJlMG",
        "outputId": "8c7c0543-3fd8-4bb9-c01a-ae63d3549098"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Net Salary: 53500.0\n"
          ]
        }
      ]
    },
    {
      "source": [
        "# 22)Calculate net sales where net sales = gross sales – 10% discount of gross\n",
        "sales\n",
        "gross_sales = float(input(\"Enter gross sales: \"))\n",
        "\n",
        "discount = gross_sales * 0.10  # 10% discount\n",
        "\n",
        "net_sales = gross_sales - discount\n",
        "\n",
        "print(\"Net sales:\", net_sales)"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "wE8mIprNKqrW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "source": [
        "# 23).Swap two values.\n",
        "a = 10\n",
        "b = 20\n",
        "\n",
        "print(\"Before swapping:\")\n",
        "print(\"a =\", a)\n",
        "print(\"b =\", b)\n",
        "\n",
        "# Swap the values using a temporary variable\n",
        "temp = a\n",
        "a = b\n",
        "b = temp\n",
        "\n",
        "print(\"\\nAfter swapping:\")\n",
        "print(\"a =\", a)\n",
        "print(\"b =\", b)\n"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "rYc2TLEpLI5v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "source": [
        "# 25).Calculate average of three subjects along with their total.\n",
        "subject1 = 80\n",
        "subject2 = 90\n",
        "subject3 = 75\n",
        "\n",
        "# Calculate total marks\n",
        "total_marks = subject1 + subject2 + subject3\n",
        "\n",
        "# Calculate average marks\n",
        "average_marks = total_marks / 3\n",
        "\n",
        "# Display the results\n",
        "print(\"Total marks:\","
      ],
      "cell_type": "code",
      "metadata": {
        "id": "r2vojdfzK23b"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7E1TKq1fKkgM"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colab",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}